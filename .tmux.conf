# This tmux statusbar config was created by tmuxline.vim
# on Wed, 05 Dec 2018
set -g default-terminal "xterm-256color"

set -g status-justify "centre"
set -g status "on"
set -g status-attr "none"
set -g message-command-bg "colour19"
set -g status-left-length "100"
set -g pane-active-border-fg "colour02"
set -g status-bg "colour18"
set -g message-command-fg "colour20"
set -g pane-border-fg "colour19"
set -g message-bg "colour19"
set -g status-left-attr "none"
set -g status-right-attr "none"
set -g status-right-length "100"
set -g message-fg "colour20"
setw -g window-status-fg "colour08"
setw -g window-status-attr "none"
setw -g window-status-activity-bg "colour18"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-fg "colour02"
setw -g window-status-separator ""
setw -g window-status-bg "colour18"
set -g status-left "#[fg=colour18,bg=colour02] #S #[fg=colour02,bg=colour19,nobold,nounderscore,noitalics]#[fg=colour20,bg=colour19] #W #[fg=colour19,bg=colour18,nobold,nounderscore,noitalics]#[fg=colour08,bg=colour18] #(whoami) | #H #[fg=colour18,bg=colour18,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour18,bg=colour18,nobold,nounderscore,noitalics]#[fg=colour08,bg=colour18] %a #[fg=colour19,bg=colour18,nobold,nounderscore,noitalics]#[fg=colour20,bg=colour19] #W %R #[fg=colour02,bg=colour19,nobold,nounderscore,noitalics]#[fg=colour18,bg=colour02] #H "
setw -g window-status-format "#[fg=colour18,bg=colour18,nobold,nounderscore,noitalics]#[default] #I #W #[fg=colour18,bg=colour18,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[fg=colour18,bg=colour19,nobold,nounderscore,noitalics]#[fg=colour20,bg=colour19] #I #W #[fg=colour19,bg=colour18,nobold,nounderscore,noitalics]"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# Resizing panes shortcuts
bind-key -n C-S-Left resize-pane -L 5
bind-key -n C-S-Right resize-pane -R 5
bind-key -n C-S-Up resize-pane -U 5
bind-key -n C-S-Down resize-pane -D 5
